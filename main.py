#!/usr/bin/python3.11
import telebot                                                                                      #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ pyTelegramBotAPI
from telebot import types                                                                           #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ types –∏–∑ –±–∏–±–ª–∏—Ç–µ–∫–∏ –≤—ã—à–µ
import sqlite3                                                                                      #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
import requests                                                                                     #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
import json                                                                                         #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å json –æ–±—ä–µ–∫—Ç–∞–º–∏

TestBot = telebot.TeleBot('TelegramApiToken')                         #–£–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º (–ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
API_weather = 'WeatherToken'                                                    #–£–∫–∞–∑–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ (–ª—É—á—à–µ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
name_home = ''
adress_home = ''
order_time= ''
operator_id = ''
user_first_name = ''
user_last_name = ''
user_id = ''                                                                                        #–û–±—ä—è–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

@TestBot.message_handler(commands=['start'])                                                        #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
def helloworld(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)                                        #–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    weatherBtn = types.KeyboardButton('–ü–æ–≥–æ–¥–∞ –≤ –ê–±–∞–∫–∞–Ω–µ')                                           #–ö–Ω–æ–ø–∫–∞ "–ø–æ–≥–æ–¥–∞ –≤ –∞–±–∞–∫–∞–Ω–µ"
    eatBtn = types.KeyboardButton('–ì–¥–µ –ø–æ–∫—É—à–∞—Ç—å?')                                                  #–ö–Ω–æ–ø–∫–∞ "–≥–¥–µ –ø–æ–∫—É—à–∞—Ç—å"
    markup.row(weatherBtn, eatBtn)                                                            #–ü–æ–º–µ—â–µ–Ω–∏–µ —ç—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
    webAppTest = types.WebAppInfo("https://itleonix.ru/testbot/")                                   # —Å–æ–∑–¥–∞–µ–º webappinfo - —Ñ–æ—Ä–º–∞—Ç —Ö—Ä–∞–Ω–µ–Ω–∏—è url
    markup.row(types.KeyboardButton('–•–æ—á—É –∫—É—à–∞—Ç—å!', web_app=webAppTest))                       # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
    orderBtn = types.KeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫')                                              #–ö–Ω–æ–ø–∫–∞ "–∑–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫"
    markup.row(orderBtn)                                                                            #–ü–æ–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –∏ –Ω–∏–∂–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    TestBot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—â–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —á–∞—Ç-–±–æ—Ç–∞.\n–ï—Å–ª–∏ –í—ã –Ω–µ –Ω–∞—à–ª–∏ –∑–¥–µ—Å—å –∫–∞–∫–æ–π-—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ —è –í–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É <b>@itleonix</b>.\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –≤–≤–µ–¥–∏—Ç–µ /help –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≤ —Å–ø–∏—Å–∫–µ –∫–æ–º–∞–Ω–¥.', parse_mode='html', reply_markup=markup)


@TestBot.message_handler(commands=['about'])                                                        #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /about
def about(message):                                                                                 #–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    botname = TestBot.get_my_name().name                                                            #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –±–æ—Ç–∞
    botdesc = TestBot.get_my_description().description                                              #–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞
    TestBot.send_message(message.chat.id, f'–ò–º—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞ {botname}. {botdesc}')              #–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

@TestBot.message_handler(commands=['help'])                                                         #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
def help(message):                                                                                  #–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ –Ω–∏–∂–µ —Ç–µ–∫—Å—Ç –≤—ã–≤–æ–¥–∏–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    text_help = '–ó–¥–µ—Å—å –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é —è –º–æ–≥—É –≤—ã–ø–æ–ª–Ω—è—Ç—å.\n\n–ö–Ω–æ–ø–∫–∞ <b>–ü–æ–≥–æ–¥–∞ –≤ –ê–±–∞–∫–∞–Ω–µ</b> - –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å–æ —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º —Å–µ—Ä–≤–∏—Å–æ–≤, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ —ç—Ç–æ –ø–æ–∑–≤–æ–ª—è—é—Ç. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –∏–∑ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ä–µ—Å—É—Ä—Å–∞ –±–µ—Ä–µ—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ –≤ –≥. –ê–±–∞–∫–∞–Ω.\n\n–ö–Ω–æ–ø–∫–∞ <b>–ì–¥–µ –ø–æ–∫—É—à–∞—Ç—å?</b> - –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –∫—Ä–æ–º–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å (–∫–Ω–æ–ø–∫–∞ "–ó–∞–ø–æ–º–Ω–∏—Ç—å –Ω–æ–≤–æ–µ") –∏ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å (–∫–Ω–æ–ø–∫–∞ "–ó–∞–±—ã—Ç—å") –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä–∫—É –∏ –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º, –∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º.\n\n–ö–Ω–æ–ø–∫–∞ <b>–•–æ—á—É –∫—É—à–∞—Ç—å!</b> - –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram, –≥–¥–µ —è –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ –í–∞—à–µ–º—É —Å–∞–π—Ç—É –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É –¥–ª—è –º–µ–Ω—è —Ä–µ—Å—É—Ä—Å—É.\n\n–ö–Ω–æ–ø–∫–∞ <b>–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫</b> - –≤ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —è —Å–≤—è–∑—ã–≤–∞—é—Å—å —Å –∫–µ–º-—Ç–æ –∏–∑ –í–∞—à–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–∞—é, —á—Ç–æ –º–æ–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —Ö–æ—á–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫, –∞ —ç—Ç–æ—Ç –∫—Ç–æ-—Ç–æ —É–∂–µ —Ä–µ—à–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑ –∏–ª–∏ –Ω–µ—Ç. –ü–µ—Ä–µ–¥ –∑–∞–∫–∞–∑–æ–º —è –º–æ–≥—É —Å–æ–æ–±—â–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É –∫–∞–∫—É—é-—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤–µ–¥—å —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å.\n\n–í–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –í–∞—à–∏—Ö —Ñ–∞–Ω—Ç–∞–∑–∏–∏ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π.'
    commands = TestBot.get_my_commands()                                                            #–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –≤–∏–¥–µ –ª–∏—Å—Ç–∞
    commandecho = []                                                                                #–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ª–∏—Å—Ç–∞
    for commandslist in commands:                                                                   #–¶–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        commandecho.append('/<b>' + commandslist.command + '</b>' + ' - ' + commandslist.description)       #–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ –≤ —á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ
    TestBot.send_message(message.chat.id, f'{text_help}\n\n<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</b>\n\n'+'\n'.join(commandecho) , parse_mode='html')    #–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

@TestBot.message_handler(content_types=['text'])                                                    #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ–≥–æ –±–æ—Ç–æ–º —Ç–µ–∫—Å—Ç–∞
def weatherBtn(message):                                                                            #–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è —Ñ–Ω—É–∫–∏—Ü—é
    if (message.text == '–ü–æ–≥–æ–¥–∞ –≤ –ê–±–∞–∫–∞–Ω–µ'):                                                        #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "–ü–æ–≥–æ–¥–∞ –≤ –ê–±–∞–∫–∞–Ω–µ" —Ç–æ...
        res = requests.get(f'https://api.openweathermap.org/data/2.5/weather?q=abakan&appid={API_weather}&units=metric&lang=ru')        #–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Ä–µ—Å—É—Ä—Å—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        data = json.loads(res.text)                                                                 #–ü–æ–ª—É—á–µ–Ω–∏–µ json –æ–±—ä–µ–∫—Ç–∞ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        weather_mess = f'–ú–µ–Ω—è –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –∫ –≤–Ω–µ—à–Ω–µ–º—É —Å–µ—Ä–≤–∏—Å—É –º–µ—Ç–µ–æ—Ä–æ–ª–æ–≥–æ–≤, —Ç–µ–ø–µ—Ä—å —è –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—É—é –ø–æ–≥–æ–¥—É –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç üå§üå•üå¶üåß\n\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º <b>{int(data["main"]["temp"])} &#176;C.</b>\n\n–ö–æ–Ω–µ—á–Ω–æ, –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –∫–∞—Ä—Ç–∏–Ω–∫–∞ –º–µ–Ω—è–ª–∞—Å—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–æ–≥–æ–¥–æ–π, –∏ –ø—Ä–æ—á–∏–µ —Ñ–∏—á–∏.'
        fotoAbk = open('./Abakan.jpg', 'rb')                                                        #–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        TestBot.send_photo(message.chat.id, fotoAbk, weather_mess, parse_mode='html')               #–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º
    elif message.text == '–ì–¥–µ –ø–æ–∫—É—à–∞—Ç—å?':                                                           #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "–ì–¥–µ –ø–æ–∫—É—à–∞—Ç—å?"
        try:                                                                                        #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            conn = sqlite3.connect('testbot.db')                                                    #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
            cur = conn.cursor()                                                                     #–£–∫–∞–∑–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞

            cur.execute('SELECT * FROM foodhome')                                                   #–ó–∞–ø—Ä–æ—Å –∫ –ë–î —Å –≤—ã–≤–æ–¥–æ–º –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
            foodhomelist = cur.fetchall()
            food_home_mess = ''                                                                     #–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            for row in foodhomelist:                                                                #–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
                food_home_mess += f'<b>{row[1]}</b> –æ–∂–∏–¥–∞–µ—Ç –í–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: <b>{row[2]}</b>. –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã {row[3]}. üçóüçïüçî –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π ‚Ññ {row[0]}'+'\n\n'

            cur.close()
            conn.close()                                                                            #–í–≤—ã—Ö–æ–¥ –∏ –ë–î

            inssert_food_home = types.InlineKeyboardMarkup()                                        #–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            inssert_food_btn = types.InlineKeyboardButton('–ó–∞–ø–æ–º–Ω–∏—Ç—å –Ω–æ–≤–æ–µ', callback_data='insert')
            del_food_btn = types.InlineKeyboardButton('–ó–∞–±—ã—Ç—å', callback_data='delete')         #2 –∫–Ω–æ–ø–∫–∏ —Å –∑–∞–¥–∞–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º
            inssert_food_home.row(inssert_food_btn, del_food_btn)                               #–ü–æ–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            TestBot.send_message(message.chat.id,f'–ú–µ–Ω—è –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –∏ —Ç–µ–ø–µ—Ä—å —è –º–æ–≥—É –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í–æ—Ç, —Å–º–æ—Ç—Ä–∏—Ç–µ  \n\n{food_home_mess}',parse_mode='html', reply_markup=inssert_food_home)


        except Exception as ex:                                                                         #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
            TestBot.send_message(message.chat.id, '<b>Error connecting to database</b>', parse_mode='html')
            cur.close()
            conn.close()

    elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫':                                                             #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "–ó–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫"
        global user_id
        user_id = message.chat.id                                                                       #–ó–∞–ø–∏—Å—å id —á–∞—Ç–∞ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        TestBot.send_message(message.chat.id, '–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –í–∞–º –Ω—É–∂–µ–Ω —Å—Ç–æ–ª–∏–∫? (–ù–∞–ø—Ä–∏–º–µ—Ä: 12:30)', parse_mode='html')      #–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        TestBot.register_next_step_handler(message, order_mes)                                          #–ü–µ—Ä–µ—Ö–æ–¥ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

    else: TestBot.send_message(message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ /help', parse_mode='html')  #–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞

@TestBot.callback_query_handler(func=lambda callback: True)                                             #–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ—à–µ–Ω–∏—è –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–∫–∞–∑–∞
def order_otv_mes(callback):
    if callback.data == 'order_success':                                                                #–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º order_success
        TestBot.delete_message(operator_id, callback.message.message_id)                                #–£–¥–∞–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–ø—Ä–æ—Å
        TestBot.send_message(operator_id, f'–í—ã –ø—Ä–∏–Ω—è–ª–∏ –∑–∞–∫–∞–∑! –û–∂–∏–¥–∞–π—Ç–µ –≥–æ—Å—Ç—è —Å –∏–º–µ–Ω–µ–º {user_first_name} {user_last_name} –≤ {order_time}')   #–û—Å—Ç–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞–∫–∞–∑–∞
        TestBot.send_message(user_id, f'–í–∞—à —Å—Ç–æ–ª–∏–∫ –∑–∞–∫–∞–∑–∞–Ω. –ë—É–¥–µ–º –æ–∂–∏–¥–∞—Ç—å –í–∞—Å –≤ {order_time}')     #–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è
    elif callback.data == 'order_error':                                                                #–ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º order_error
        order_err_btn = types.InlineKeyboardMarkup()                                                    #–°–æ–∑–¥–∞–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞
        order_err_mes = types.InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è', callback_data='order_err_mes')
        order_err_btn.row(order_err_mes)
        TestBot.delete_message(operator_id, callback.message.message_id)                                #–£–¥–∞–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
        TestBot.send_message(operator_id, f'–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏ –≥–æ—Å—Ç—é —Å –∏–º–µ–Ω–µ–º {user_first_name} {user_last_name}. –ù–∞–¥–µ—é—Å—å —ç—Ç–æ –±—ã–ª–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω–æ')   #–£ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Å—Ç–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –∫–ª–∏–µ–Ω—Ç—É
        TestBot.send_message(user_id, f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ {order_time} –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–∏–∫–æ–≤. –ú–æ–∂–µ—Ç –±—ã—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è?', reply_markup=order_err_btn)  #–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è
    elif callback.data == 'order_err_mes':                                                              #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è
        TestBot.send_message(callback.message.chat.id, '–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –í–∞–º –Ω—É–∂–µ–Ω —Å—Ç–æ–ª–∏–∫? (–ù–∞–ø—Ä–∏–º–µ—Ä: 12:30)', parse_mode='html')
        TestBot.register_next_step_handler(callback.message, order_mes)                                 #–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —É–∫–∞–∑–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    else:
        TestBot.send_message(callback.message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ /help', parse_mode='html') #–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏

@TestBot.callback_query_handler(func=lambda callback: True)
def callback_food_home(callback):                                                                          #–§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
    if callback.data == 'insert':
        TestBot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è', parse_mode='html')
        TestBot.register_next_step_handler(callback.message, name_food_home)
    elif callback.data == 'delete':
        TestBot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–±—ã—Ç—å', parse_mode='html')
        TestBot.register_next_step_handler(callback.message, index_food_home)
    else: TestBot.send_message(callback.message.chat.id, '–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–æ–º–∞–Ω–¥–µ /help', parse_mode='html')

def order_mes(message):                                                                                    #–§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
    global order_time
    global operator_id
    global user_first_name
    global user_last_name
    order_time = message.text.strip()
    #operator_id = '1278985873'
    operator_id ='6191695022'
    TestBot.send_message(message.chat.id, f'–û–¥–Ω—É –º–∏–Ω—É—Ç—É, —è —É—Ç–æ—á–Ω—É –µ—Å—Ç—å –ª–∏ —Å–≤–æ–±–æ–¥–Ω—ã–π —Å—Ç–æ–ª–∏–∫ –Ω–∞ {order_time}.\n\n–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç, –ø–æ—ç—Ç–æ–º—É –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–æ, —Å–ø–∞–ø—Å–∏–±–æ –∑–∞ –æ–∂–∏–¥–∞–Ω–∏–µ.', parse_mode='html')
    order = types.InlineKeyboardMarkup()
    order_success = types.InlineKeyboardButton('–ü—Ä–∏–Ω—è—Ç—å –∑–∞–∫–∞–∑', callback_data='order_success')
    order_error = types.InlineKeyboardButton('–û—Ç–∫–∞–∑–∞—Ç—å', callback_data='order_error')
    order.row(order_success, order_error)
    user_first_name = message.from_user.first_name
    user_last_name = message.from_user.last_name
    TestBot.send_message(operator_id, f'<b>–í–Ω–∏–º–∞–Ω–∏–µ –ó–ê–ö–ê–ó!!!</b>\n\n<b>{user_first_name} {user_last_name}</b> —Ö–æ—á–µ—Ç –∑–∞–∫–∞–∑–∞—Ç—å —Å—Ç–æ–ª–∏–∫ –Ω–∞ <b>{order_time}</b>. –ï—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ?', parse_mode='html', reply_markup=order)

def name_food_home(message):
    global name_home
    name_home = message.text.strip()
    TestBot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –Ω—É–∂–µ–Ω –∞–¥—Ä–µ—Å', parse_mode='html')
    TestBot.register_next_step_handler(message, adress_food_home)

def adress_food_home(message):
    global adress_home
    adress_home = message.text.strip()
    TestBot.send_message(message.chat.id, '–ò –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã', parse_mode='html')
    TestBot.register_next_step_handler(message, timework_food_home)

def timework_food_home(message):
    timework_home = message.text.strip()
    try:
        conn = sqlite3.connect('testbot.db')
        cur = conn.cursor()

        cur.execute("INSERT INTO foodhome (name, adress, timework) VALUES ('%s', '%s', '%s')" % (name_home, adress_home, timework_home))
        conn.commit()
        cur.close()
        conn.close()

        TestBot.send_message(message.chat.id, '–ó–∞–ø–æ–º–Ω–∏–ª', parse_mode='html')

    except Exception as ex:
        TestBot.send_message(message.chat.id, '<b>Error connecting to database</b>', parse_mode='html')
        cur.close()
        conn.close()

def index_food_home(message):
    index_del = message.text.strip()
    dele = int(index_del)
    try:
        conn = sqlite3.connect('testbot.db')
        cur = conn.cursor()

        cur.execute("DELETE FROM foodhome WHERE id = '%d'" % (dele))
        conn.commit()
        cur.close()
        conn.close()

        TestBot.send_message(message.chat.id, '–ó–∞–±—ã–ª', parse_mode='html')

    except Exception as ex:
        TestBot.send_message(message.chat.id, '<b>Error connecting to database</b>', parse_mode='html')
        cur.close()
        conn.close()




TestBot.polling(none_stop=True)
